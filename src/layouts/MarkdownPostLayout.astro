---
import { type Props as HeadProps } from '~/components/SEO/Main.astro';
import BaseLayout from './BaseLayout.astro';
import Tags from '~/components/ui/Tags.astro';
import { Icon } from 'astro-icon/components';

import Hero, { type Props as HeroProps } from '~/components/hero/Hero.astro';
import { readableDate, htmlDateString } from '~/js/utils.js';
import BlockPicture from '~/components/images/BlockPicture.astro';
import TableOfContents from '~/components/ui/TableOfContents.astro';
import PostPreview from '~/components/ui/PostPreview.astro';

const { frontmatter, minutesRead, headings, prevPost, nextPost } = Astro.props;

const fm = frontmatter || Astro.props;
const head: HeadProps = {
    ...fm.head, // Spread any existing values in `fm.head`
    title: fm.title || fm.head?.title,
    description: fm.description || fm.head?.description,
    og: fm.og || fm.head?.og,
};

const { hideToc = false, hideBreadcrumbs = false } = fm;

const isHeroDark =
    (fm.isHeroDark || (fm.heroConfig && fm.heroConfig.dark)) ?? false;
---

<BaseLayout head={head} {isHeroDark}>
    <slot name="hero">
        <Hero heroConfig={fm.heroConfig} title={head.title} />
    </slot>

    <main
        id="main-content"
        class="relative mx-auto max-w-container py-fl-space-xl"
    >
        <article class="relative">
            <div class="rte prose mx-auto max-w-3xl text-fl-step-0">
                {
                    frontmatter.splash && (
                        <BlockPicture
                            src={frontmatter.splash.src}
                            class="my-0"
                            alt={frontmatter.splash.alt}
                            credit={frontmatter.splash.credit}
                        />
                    )
                }
                {
                    headings && headings.length > 2 && !hideToc && (
                        <TableOfContents headings={headings} />
                    )
                }
                <slot />
                <aside class="not-prose mt-fl-space-m w-full py-fl-space-m">
                    <p class="inline-flex items-center">
                        <Icon
                            name="lucide:calendar"
                            class="inline-block h-4 w-auto"
                        />
                        <span class="mx-fl-space-3xs">Last updated:</span>
                        <time
                            datetime={htmlDateString(
                                frontmatter.modDate || frontmatter.pubDate,
                            )}
                            >{
                                readableDate(
                                    frontmatter.modDate || frontmatter.pubDate,
                                )
                            }
                        </time>
                    </p>
                    <Tags
                        tags={frontmatter.tags}
                        url={true}
                        class="mt-fl-space-m"
                    />
                </aside>
            </div>
        </article>
    </main>
    <aside
        class="border-t border-line bg-surface-sunken px-fl-space-s py-fl-space-2xl"
    >
        <div
            class="mx-auto grid max-w-3xl grid-cols-1 justify-between gap-fl-space-l md:grid-cols-prevnext"
        >
            {
                nextPost && (
                    <PostPreview
                        post={nextPost}
                        preview={'next'}
                        class="md:col-start-1"
                    />
                )
            }{
                prevPost && (
                    <PostPreview
                        post={prevPost}
                        preview={'prev'}
                        class="md:col-start-2"
                    />
                )
            }
        </div>
    </aside>
</BaseLayout>
