---
import MainSEO, { type Props as HeadProps } from '~/components/SEO/Main.astro';
import GoogleTagNoScript from '~/components/SEO/GoogleTagNoScript.astro';
import GoogleTag from '~/components/SEO/GoogleTag.astro';
import Header from '~/components/preact/layout/Header';
import Footer from '~/components/layout/Footer.astro';
import Underlay from '~/components/preact/overlays/Underlay';
import Overlay from '~/components/preact/overlays/Overlay';
import CookieNotice from '~/components/preact/overlays/CookieNotice.tsx';
import PageTop from '~/components/preact/navigation/PageTop';
import Accessibility from '~/components/ui/Accessibility.astro';
import OffCanvasNavigation from '~/components/preact/navigation/OffCanvasNavigation';

import BypeteWhite from '~/assets/svg/bypete__white.svg?react';

const fm = Astro.props.frontmatter || Astro.props;

const { head = {}, isHeroDark = false } = fm;
const currentPath = new URL(Astro.request.url).pathname;
const isProduction = process.env.NODE_ENV === 'production';
import '~/styles/global.css';
---

<html
    lang="en"
    data-theme="light"
    data-hero={isHeroDark ? 'dark' : 'light'}
    class="group/page h-full max-w-full scroll-smooth"
>
    <head>
        <MainSEO {...head} {isHeroDark} />
        <GoogleTag />
    </head>
    <body
        class="relative overflow-x-hidden bg-surface font-Roboto text-step-0 text-content antialiased"
        id="top"
    >
        {isProduction && <GoogleTagNoScript />}
        <Accessibility
            a11yLinks={[
                { anchor: '#main-content', label: 'content' },
                { anchor: '#navigation', label: 'navigation' },
            ]}
        />

        <Header client:load />

        <div
            class="absolute top-0 left-safe-inline z-(--z-logo) hidden md:block"
        >
            <a
                href="/"
                aria-label="byPete - home"
                class="inline-flex h-logoheight w-auto items-end bg-primary bg-gradient-to-b from-85% to-primary-dark p-fluid-2xs shadow-md shadow-black/[0.08]"
                ><BypeteWhite
                    class="h-fluid-m w-auto"
                    title="byPete logo in white"
                /></a
            >
        </div>

        <div id="wrapperCanvas" class="relative">
            <OffCanvasNavigation {currentPath} client:load />

            <Overlay client:load />

            <div
                id="wrapperContent"
                class="@container/page relative grid grid-cols-1 grid-rows-[1fr_auto] bg-surface"
            >
                <Underlay client:load {isHeroDark} />

                <div class="relative w-full bg-surface outline-hidden">
                    <slot />
                    <!-- Page tools -->
                    <div
                        class="sticky right-fluid-m bottom-0 z-[--z-shortcuts] mr-0 ml-auto flex w-auto max-w-fit justify-end"
                    >
                        <div
                            class="absolute right-0 bottom-0 -translate-y-fluid-m"
                        >
                            <PageTop client:load />
                        </div>
                    </div>
                </div>
                <Footer />
            </div>
        </div>

        <div
            class="pointer-events-none fixed top-[100svh] left-1/2 z-(--z-toast) w-full max-w-sm -translate-x-1/2 -translate-y-full p-fluid-xs not-dynamic:top-[100vh]"
        >
            <CookieNotice client:load />
        </div>

        <style is:inline>
            /* Alpine.js
---------------------------------------------------------------------------------*/
            [x-cloak],
            [data-cloak] {
                visibility: hidden;
                opacity: 0;
                position: absolute;
            }
        </style>
    </body>
</html>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const cloakedElements = document.querySelectorAll('[data-cloak]');
        for (const el of cloakedElements) {
            el.removeAttribute('data-cloak');
        }
    });
    (function () {
        const storedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia(
            '(prefers-color-scheme: dark)'
        ).matches;
        const theme = storedTheme ?? (prefersDark ? 'dark' : 'light');
        if (!storedTheme) {
            localStorage.setItem('theme', theme);
        }

        const metaTags = document.querySelectorAll('meta[name="theme-color"]');

        for (const metaTag of metaTags) {
            metaTag.setAttribute(
                'content',
                theme === 'light' ? 'rgb(252, 252, 252)' : 'rgb(31, 31, 40)'
            );
        }
        document.documentElement.setAttribute('data-theme', theme);
    })();
</script>
