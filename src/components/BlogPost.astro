---
import { Image } from 'astro:assets';
import ReadTime from '~/components/ui/ReadTime.astro';
import Tags from '~/components/ui/Tags.astro';

interface CoverImage {
    alt: string;
    credit: string;
    src: ImageMetadata;
}

interface LogoImage {
    light?: ImageMetadata;
    src: ImageMetadata;
}

interface Props {
    cover: CoverImage;
    logo?: LogoImage;
    readTime: string;
    tags: string[];
    taster: string;
    title: string;
    url: string;
}

const { cover, logo, readTime, tags, taster, title, url } = Astro.props;
---

<article
    class="grid grid-cols-1 gap-fl-space-m grid-areas-listing md:grid-cols-listing md:grid-areas-listingwide"
>
    {
        cover && (
            <div class="grid-in-image">
                <a
                    href={url}
                    class="relative block w-full pb-widescreen lg:pb-tv"
                >
                    <Image
                        src={cover.src}
                        alt={cover.alt}
                        class="absolute inset-0 m-0 h-full w-full object-cover"
                        quality="high"
                        loading="eager"
                        densities={[1.5, 2]}
                        width={300}
                    />

                    {logo && (
                        <Image
                            src={logo.light || logo.src}
                            densities={[1.5, 2]}
                            width={300}
                            alt={title + ' logo'}
                            class="absolute left-1/2 top-1/2 m-auto h-auto max-w-1/2 -translate-x-1/2 -translate-y-1/2 transition-all duration-200 group-hover:max-w-1/2 group-focus:max-w-1/2 "
                        />
                    )}
                </a>
            </div>
        )
    }
    <div class="grid grid-cols-1 gap-fl-space-xs grid-in-description">
        <div>
            <h2 class="font-headline text-fl-step-3 leading-tight">
                <a href={url} class="link" set:html={title} />
            </h2>
            {taster && <p set:html={taster} />}
        </div>

        {readTime && <ReadTime duration={readTime} />}
        <Tags {tags} url={true} />
    </div>
</article>
