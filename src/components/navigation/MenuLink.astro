---
interface Props {
    title: string;
    url: string;
    isHeroDark: boolean;
    isActive?: boolean;
    class?: string;
}

const { title, url, isHeroDark, isActive, class: className } = Astro.props;

const heroThemes = {
    dark: {
        text: [
            'text-content-light',
            'hover:text-link',
            'focus:text-link',
            'ring-transparent',
            // Scroll up banner state:
            'hover:group-data-up/page:text-link',
            'focus:group-data-up/page:text-link',
            'group-data-up/page:text-content-shout',
        ],
        active: [
            'text-content-light',
            'ring-brand',
            'hover:text-content-shout',
            'hover:group-data-up/page:text-link',
            'focus:group-data-up/page:text-link',
            'group-data-up/page:text-content-shout',
        ],
    },
    default: {
        text: [
            'text-content-shout',
            'ring-transparent',
            'hover:text-link',
            'focus:text-link',
        ],
        active: [
            'text-content-shout',
            'ring-brand',
            'hover:text-content-shout',
        ],
    },
};

const currentTheme = isHeroDark ? heroThemes.dark : heroThemes.default;
---

<a
    href={url}
    class:list={[
        'px-fluid-2xs py-fluid-3xs text-step-0/fluid-m hover:bg-surface-raised focus:bg-surface-raised block flex h-full items-center rounded-full font-semibold ring-2 transition duration-150 focus:outline-hidden',
        isActive ? currentTheme.active : currentTheme.text,
        className,
    ]}
    {...isActive && { 'data-state': 'active' }}>{title}</a
>
