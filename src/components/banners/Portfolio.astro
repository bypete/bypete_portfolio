---
import Block from '~/components/blocks/Block.astro';
import { Image } from 'astro:assets';
import Button from '~/components/preact/Button';
import product from '~/assets/work/mykringapp/product.png';

import pieces from '~/data/work';

import { Icon } from 'astro-icon/components';
interface Props {
    wrapper?: string;
    class?: string;
}
const { wrapper, class: className } = Astro.props;
---

<Block
    layout={{ slots: 2, type: 'default' }}
    data-inview="portfolio"
    wrapperClass={`${wrapper && wrapper} not-rte`}
    class:list={[className && className]}
    legibility="text-content-dark"
    slotConfig={{
        1: ['self-center'],
        2: ['self-center'],
    }}
>
    <div class="plusheap absolute inset-0 h-full w-full opacity-20"></div>

    <Image
        data-animate="scaleIn"
        slot="s1"
        src={product}
        quality="high"
        loading="eager"
        densities={[1.5, 2]}
        width={600}
        class="relative m-0 h-full w-full object-contain"
        alt="iPhones with mykring app in use"
    />
    <div slot="s2" class="py-fluid-m">
        <h2
            class="font-headline text-step-3/tight font-bold tracking-tight"
            data-animate="fadeInDown"
        >
            Show and tell
        </h2>
        <p class="mb-fluid-m" data-animate="fadeInDown">
            Curious to see my work in action? Discover the stories behind my
            projects, the challenges addressed, and the solutions crafted.
        </p>
        <p class="flex flex-row gap-fluid-3xs">
            <Button data-animate="scaleIn" theme="secondary" href="/work/"
                >Explore the portfolio</Button
            >
            <Button
                client:load
                theme="disco"
                href="/work/"
                data-animate="scaleIn"
                isIcon={true}
                choices={pieces.collection}
                >Random pick
                <Icon
                    name="lucide:shuffle"
                    class="h-fluid-xs w-auto animate-pulse"
                />
            </Button>
        </p>
    </div>
</Block>

<script>
    import { inView, animate, type AnimationSequence, stagger } from 'motion';

    const focus = document.querySelectorAll('[data-inview="portfolio"]');
    inView(
        focus,
        (el) => {
            const queryElementsByAnimation = (animation) => {
                return el.querySelectorAll(`[data-animate="${animation}"]`);
            };
            const scaleIn = queryElementsByAnimation('scaleIn');
            const fadeInDown = queryElementsByAnimation('fadeInDown');

            const sequenceIn: AnimationSequence = [
                [
                    fadeInDown,
                    {
                        opacity: [0, 1],
                        transform: ['translateY(-25%)', 'translateY(0%)'],
                    },
                    { duration: 0.25, delay: stagger(0.25), at: 0 },
                ],
                [
                    scaleIn,
                    { opacity: [0, 1], scale: [0.85, 1] },
                    { duration: 0.25, delay: stagger(0.25), at: '<' },
                ],
            ];

            animate(sequenceIn, {});

            return (leaveInfo) =>
                animate([
                    [fadeInDown, { opacity: 0 }, { at: 0 }],
                    [scaleIn, { opacity: 0 }, { at: '<' }],
                ]);
        },
        { amount: 0.25 }
    );
</script>
