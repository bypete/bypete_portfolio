---
interface Props {
    class?: string;
    id: string;
    label: string;
    multiple?: boolean;
    size?: number;
    required?: boolean;
    name: string;
}
const {
    id,
    name,
    multiple = false,
    label,
    size,
    class: ClassName,
    required = false,
} = Astro.props;

const attrs = {
    name,
    id,
    class: 'form__textarea peer w-full',
    ...(required && { required: true }),
    ...(multiple && { multiple: true }),
    ...(typeof size === 'number' && { size }),
};
---

<div class:list={['group', ClassName && ClassName]} data-form-group>
    <div
        class="relative grid grid-cols-1 grid-rows-1 items-center *:col-start-1 *:row-start-1"
    >
        <select {...attrs}>
            <slot />
        </select>
        <label
            class="ml-fluid-3xs bg-surface-raised px-fluid-2xs text-step--1 text-content-quiet shadow-surface-raised text-shadow-xs peer-placeholder-shown:translate-y-fluid-2xs peer-placeholder-shown:text-step-0 peer-focus:text-step--1 pointer-events-none -translate-y-1/2 self-start justify-self-start leading-none font-medium transition-all peer-placeholder-shown:self-start peer-focus:-translate-y-1/2 peer-focus:self-start"
            for={id}>{label}</label
        >
        {
            !required && (
                <span class="text-step--2/loose text-content-quiet -translate-y-full self-start justify-self-end">
                    Optional
                </span>
            )
        }
    </div>
    <slot name="help" />
    <div id={`${id}_error`} class="error-message"></div>
</div>
