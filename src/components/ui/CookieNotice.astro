---
import { Icon } from 'astro-icon/components';
import Button from '~/components/ui/Button.astro';
import Toast from '~/components/ui/Toast.astro';
---

<Toast id="toastCookie" theme={'settings'} hidden={true}>
    <div
        x-data="consentHandler({ select: false })"
        class="grid items-start gap-y-fl-space-xs p-fl-space-xs grid-areas-toast"
    >
        <div class="text-fl-step--1 grid-in-message">
            <p>
                We use cookies to understand how visitors interact with our
                site. This helps us to provide a better user experience. Use the
                checkboxes to set your preferences <a
                    class="link"
                    href="/legal/#how-we-use-cookies">View our policy</a
                >
            </p>

            <div class="my-fl-space-2xs grid grid-cols-2 gap-fl-space-2xs">
                <label
                    ><input
                        id="consent_necessary"
                        type="checkbox"
                        value="necessary"
                        checked
                        disabled
                    /> Necessary</label
                >
                <label
                    ><input
                        id="consent_analytics"
                        type="checkbox"
                        value="analytics"
                        checked
                    /> Analytics</label
                >
                <label
                    ><input
                        id="consent_preferences"
                        type="checkbox"
                        value="preferences"
                        checked
                    /> Preferences</label
                >
                <label
                    ><input
                        id="consent_marketing"
                        type="checkbox"
                        value="marketing"
                        checked
                    /> Marketing</label
                >
            </div>
        </div>
        <button
            type="button"
            aria-label="hide notice"
            @click="freeze(false)"
            class="-mr-fl-space-s -mt-fl-space-s rounded-full bg-warning p-fl-space-3xs text-white shadow-floated grid-in-close hover:bg-warning-shade"
        >
            <Icon name="mdi:hide" class="h-4 w-auto" />
        </button>
        <p
            class="grid grid-flow-col justify-between gap-fl-space-s grid-in-action"
        >
            <Button
                id="consent_reject"
                type="button"
                theme="outline"
                size="sm"
                @click="reject()"
                aria-label="Reject">Reject all</Button
            >
            <Button
                id="consent_all"
                type="button"
                size="sm"
                @click="accept()"
                aria-label="Accept">Accept choices</Button
            >
        </p>
    </div>
</Toast>

<script>
    import Alpine from 'alpinejs';
    import { timeline, type TimelineDefinition } from 'motion';
    import type { ConsentMode } from '~/components/SEO/GoogleTag.astro';

    const body = document.body;
    const cookie = document.getElementById('toastCookie');
    const overlay = document.getElementById('overlay');

    const toast = (visible) => {
        if (cookie && overlay) {
            const show: TimelineDefinition = [
                [
                    cookie,
                    {
                        opacity: [0, 1],
                        scale: [0.75, 1],
                    },
                ],
                [
                    overlay,
                    {
                        opacity: 1,
                    },
                    { at: '<' },
                ],
            ];
            const hide: TimelineDefinition = [
                [
                    cookie,
                    {
                        opacity: 0,
                    },
                    {},
                ],
                [
                    overlay,
                    {
                        opacity: 0,
                    },
                    { at: '<' },
                ],
            ];

            overlay.classList.toggle('hidden', !visible);
            cookie.classList.toggle('hidden', !visible);
            body.classList.toggle('!h-screenSvh', visible);

            const sequence = visible ? show : hide;

            timeline(sequence, {
                duration: 0.25,
            }).finished.then(() => {});
        }
    };

    document.addEventListener('alpine:init', () => {
        Alpine.data('consentHandler', ({ select }) => ({
            select: select || false,
            toastCookie: false,
            freeze(visible) {
                this.toastCookie = visible;
                toast(visible);
            },
            wait(ms = 0) {
                return new Promise((resolve) => setTimeout(resolve, ms));
            },
            init() {
                this.checkConsent();
            },
            async checkConsent() {
                if (!localStorage.getItem('consentMode')) {
                    await this.wait(2500);
                    this.freeze(true);
                }
            },

            accept() {
                // Retrieve checkbox elements
                const marketingCheckbox = document.getElementById(
                    'consent_marketing',
                ) as HTMLInputElement | null;
                const analyticsCheckbox = document.getElementById(
                    'consent_analytics',
                ) as HTMLInputElement | null;
                const preferencesCheckbox = document.getElementById(
                    'consent_preferences',
                ) as HTMLInputElement | null;

                // Check if the elements exist before accessing their properties
                const consent = {
                    necessary: true,
                    marketing: marketingCheckbox
                        ? marketingCheckbox.checked
                        : false,
                    analytics: analyticsCheckbox
                        ? analyticsCheckbox.checked
                        : false,
                    preferences: preferencesCheckbox
                        ? preferencesCheckbox.checked
                        : false,
                };

                this.updateConsent(consent);
                this.freeze(false); // Hide toast
            },
            reject() {
                this.updateConsent({
                    necessary: true,
                    marketing: false,
                    analytics: false,
                    preferences: false,
                });
                this.freeze(false);
            },
            updateConsent(consent) {
                const consentMode: ConsentMode = {
                    functionality_storage: consent.necessary
                        ? 'granted'
                        : 'denied',
                    security_storage: consent.necessary ? 'granted' : 'denied',
                    ad_storage: consent.marketing ? 'granted' : 'denied',
                    analytics_storage: consent.analytics ? 'granted' : 'denied',
                    personalization_storage: consent.preferences
                        ? 'granted'
                        : 'denied',
                };
                window.gtag('consent', 'update', consentMode);
                // Store updated consentMode in localStorage
                localStorage.setItem(
                    'consentMode',
                    JSON.stringify(consentMode),
                );
            },
        }));
    });
</script>
