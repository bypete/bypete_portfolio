---
import Tag from '~/components/ui/Tag.astro';
interface Props {
    tags: string[];
    url?: boolean;
    class?: string;
}
const { tags, url = false, class: className = ' ' } = Astro.props;
// Move 'featured' to the beginning of the array, if it exists
if (tags.includes('featured')) {
    tags.unshift(tags.splice(tags.indexOf('featured'), 1)[0]);
}
---

{
    tags && (
        <ul
            data-inview="tags"
            class:list={[
                'flex flex-wrap items-center gap-fluid-2xs text-step--1 leading-none',
                className,
            ]}
        >
            {tags.map((tag) => (
                <li data-animate="tag">
                    <Tag
                        href={`/tags/${tag}/`}
                        isLink={url}
                        featured={tag.toLowerCase() === 'featured'}
                    >
                        {tag}
                    </Tag>
                </li>
            ))}
        </ul>
    )
}
<script>
    import { inView, animate, stagger } from 'motion';
    inView(
        "[data-inview='tags']",
        (info: Element) => {
            const queryElementsByAnimation = (animation: string) => {
                return info.querySelectorAll(`[data-animate="${animation}"]`);
            };
            const tag = queryElementsByAnimation('tag');

            if (tag.length > 0) {
                const animation = animate(
                    tag,
                    {
                        opacity: [0, 1],
                        transform: ['translateX(10px)', 'translateX(0px)'],
                    },
                    { duration: 0.2, delay: stagger(0.1) }
                );
                return () => (animation.speed = -1); // Reverse animation on exit
            }
        },
        { amount: 0.25 }
    );
</script>
