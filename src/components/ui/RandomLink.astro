---
import type { Props as ButtonProps } from '~/components/ui/Button.astro';
import Button from '~/components/ui/Button.astro';

// Extend the original interface with a new prop
export interface ExtendedProps extends ButtonProps {
    choices: string[];
}

const {
    theme = 'disco',
    choices = [],
    ...buttonProps
} = Astro.props as ExtendedProps;

let stringChoices = JSON.stringify(choices);
stringChoices = stringChoices.replace(/\"/g, "'");
---

<Button
    {theme}
    x-data={`{caseArray:${stringChoices}, ...randomcase()}`}
    @click.prevent="open()"
    {...buttonProps}
>
    <slot />
</Button>

<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('randomcase', () => ({
            open() {
                if (this.caseArray.length > 0) {
                    const url =
                        this.caseArray[
                            Math.floor(Math.random() * this.caseArray.length)
                        ];
                    window.open(url, '_self');
                }
            },
        }));
    });
</script>
